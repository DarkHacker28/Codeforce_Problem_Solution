#include <iostream>
#include <vector>
 
using namespace std;
typedef long long ll;
 
// Function to calculate the volume of the secret box
ll calculateVolume(ll side_x, ll side_y, ll side_z, ll secret_k) {
    ll volume = 1;
    volume *= side_x;
    volume *= side_y;
    volume *= side_z;
    return volume;
}
 
// Function to count the number of distinct locations to place the secret box
ll countDistinctLocations(ll side_x, ll side_y, ll side_z, ll secret_k) {
    ll maxLocations = 0;
    for (ll i = 1; i <= side_x; i++) {
        for (ll j = 1; j <= side_y; j++) {
            if (secret_k % (i * j) == 0 && (secret_k / (i * j)) <= side_z) {
                maxLocations = max(maxLocations, (side_x - i + 1) * (side_y - j + 1) * (side_z - (secret_k / (i * j)) + 1));
            }
        }
    }
    return maxLocations; 
}
 
// Function to handle each test case
void handleTestCase() {
    ll box_x, box_y, box_z, secret_k;
    cin >> box_x >> box_y >> box_z >> secret_k;
    ll volume = calculateVolume(box_x, box_y, box_z, secret_k);
    ll distinctLocations = countDistinctLocations(box_x, box_y, box_z, secret_k);
    cout << distinctLocations << endl;
}
 
int main() {
    int numTestCases;
    cin >> numTestCases;
 
    while (numTestCases--) {
        handleTestCase();
    }
    return 0;
}
