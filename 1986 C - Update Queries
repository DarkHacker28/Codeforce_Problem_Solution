#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
 
using namespace std;
 
int main() {
    int t;
    cin >> t; // Number of test cases
    
    while (t--) {
        int n, m;
        cin >> n >> m; // Length of string and number of updates
        
        string s; // Original string
        cin >> s;
        
        vector<int> indices(m); // Indices to update
        for (int &index : indices) {
            cin >> index;
        }
        
        string update_chars; // Characters for updates
        cin >> update_chars;
        
        // Create a set of unique indices and sort them
        set<int> unique_indices(indices.begin(), indices.end());
        vector<int> sorted_indices(unique_indices.begin(), unique_indices.end());
        sort(sorted_indices.begin(), sorted_indices.end());
        
        // Sort update_chars to match sorted_indices
        sort(update_chars.begin(), update_chars.end());
        
        // Map indices to characters
        map<int, char> index_to_char;
        for (size_t i = 0; i < sorted_indices.size(); ++i) {
            index_to_char[sorted_indices[i]] = update_chars[i];
        }
        
        // Apply updates to the string s
        for (const auto &entry : index_to_char) {
            int index = entry.first;
            char character = entry.second;
            s[index - 1] = character; // Adjust index to 0-based
        }
        
        // Output the modified string
        cout << s << endl;
    }
 
    return 0;
}
