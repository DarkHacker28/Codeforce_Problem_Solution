#include "bits/stdc++.h"

#define all(a) a.begin(), a.end()
#define pb push_back
typedef long long ll;
using namespace std;
mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());

const int N = 100005;

void solve() {
    ll x;
    cin >> x;
    vector<int> res(31, 0); // We use 31 elements because n <= 32 (from problem statement)
    for (int i = 0; i < 30; i++) { // Iterate up to 30 because we handle up to 31 bits (0-indexed)
        if (1ll & (x >> i)) { // Check if the i-th bit of x is 1
            if (res[i]) { // If res[i] is already set (typically to 1), handle carry
                res[i + 1] = 1;
                res[i] = 0;
            } else if (i > 0) { // If res[i] is 0, handle the case when res[i - 1] == 1
                if (res[i - 1] == 1) {
                    res[i + 1] = 1;
                    res[i - 1] = -1;
                } else {
                    res[i] = 1; // Otherwise, just set res[i] to 1
                }
            } else if (i == 0) { // Special case when i is 0, just set res[0] to 1
                res[i] = 1;
            }
        }
    }
    cout << 31 << '\n'; // Print n = 31 (since we always use 31 elements in res)
    for (int i = 0; i <= 30; i++) { // Output all elements of res
        cout << res[i] << ' ';
    }
    cout << '\n';
}

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int tt = 1;
    cin >> tt;
    while (tt--) // Loop over each test case
        solve();
}
